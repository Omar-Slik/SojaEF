// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(ContextFil))]
    [Migration("20220114173122_AllDone")]
    partial class AllDone
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DAL.Campain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Price_Drop")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Campains");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Price_Drop = 10.0
                        },
                        new
                        {
                            Id = 2,
                            Price_Drop = 15.0
                        },
                        new
                        {
                            Id = 3,
                            Price_Drop = 25.0
                        },
                        new
                        {
                            Id = 4,
                            Price_Drop = 50.0
                        });
                });

            modelBuilder.Entity("DAL.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeId = 1,
                            Name = "Dairy"
                        },
                        new
                        {
                            Id = 2,
                            EmployeeId = 2,
                            Name = "Fruit"
                        },
                        new
                        {
                            Id = 3,
                            EmployeeId = 3,
                            Name = "Pantry"
                        },
                        new
                        {
                            Id = 4,
                            EmployeeId = 4,
                            Name = "Drinks"
                        },
                        new
                        {
                            Id = 5,
                            EmployeeId = 5,
                            Name = "Bread"
                        },
                        new
                        {
                            Id = 6,
                            EmployeeId = 2,
                            Name = "Meat"
                        });
                });

            modelBuilder.Entity("DAL.DepartmentProduct", b =>
                {
                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentsId")
                        .HasColumnType("int");

                    b.HasKey("ProductsId", "DepartmentsId");

                    b.HasIndex("DepartmentsId");

                    b.ToTable("DepartmentsProducts");

                    b.HasData(
                        new
                        {
                            ProductsId = 1,
                            DepartmentsId = 1
                        },
                        new
                        {
                            ProductsId = 1,
                            DepartmentsId = 4
                        },
                        new
                        {
                            ProductsId = 2,
                            DepartmentsId = 1
                        },
                        new
                        {
                            ProductsId = 3,
                            DepartmentsId = 2
                        },
                        new
                        {
                            ProductsId = 3,
                            DepartmentsId = 4
                        },
                        new
                        {
                            ProductsId = 4,
                            DepartmentsId = 2
                        },
                        new
                        {
                            ProductsId = 4,
                            DepartmentsId = 4
                        },
                        new
                        {
                            ProductsId = 5,
                            DepartmentsId = 4
                        },
                        new
                        {
                            ProductsId = 5,
                            DepartmentsId = 2
                        },
                        new
                        {
                            ProductsId = 6,
                            DepartmentsId = 3
                        },
                        new
                        {
                            ProductsId = 7,
                            DepartmentsId = 3
                        },
                        new
                        {
                            ProductsId = 8,
                            DepartmentsId = 4
                        },
                        new
                        {
                            ProductsId = 9,
                            DepartmentsId = 4
                        },
                        new
                        {
                            ProductsId = 9,
                            DepartmentsId = 3
                        },
                        new
                        {
                            ProductsId = 10,
                            DepartmentsId = 5
                        },
                        new
                        {
                            ProductsId = 10,
                            DepartmentsId = 3
                        },
                        new
                        {
                            ProductsId = 11,
                            DepartmentsId = 5
                        },
                        new
                        {
                            ProductsId = 12,
                            DepartmentsId = 6
                        },
                        new
                        {
                            ProductsId = 13,
                            DepartmentsId = 6
                        },
                        new
                        {
                            ProductsId = 14,
                            DepartmentsId = 5
                        },
                        new
                        {
                            ProductsId = 15,
                            DepartmentsId = 6
                        },
                        new
                        {
                            ProductsId = 16,
                            DepartmentsId = 1
                        },
                        new
                        {
                            ProductsId = 17,
                            DepartmentsId = 3
                        },
                        new
                        {
                            ProductsId = 18,
                            DepartmentsId = 4
                        },
                        new
                        {
                            ProductsId = 18,
                            DepartmentsId = 3
                        },
                        new
                        {
                            ProductsId = 19,
                            DepartmentsId = 1
                        },
                        new
                        {
                            ProductsId = 19,
                            DepartmentsId = 3
                        },
                        new
                        {
                            ProductsId = 20,
                            DepartmentsId = 3
                        },
                        new
                        {
                            ProductsId = 20,
                            DepartmentsId = 5
                        },
                        new
                        {
                            ProductsId = 21,
                            DepartmentsId = 3
                        },
                        new
                        {
                            ProductsId = 21,
                            DepartmentsId = 5
                        },
                        new
                        {
                            ProductsId = 22,
                            DepartmentsId = 3
                        },
                        new
                        {
                            ProductsId = 22,
                            DepartmentsId = 5
                        });
                });

            modelBuilder.Entity("DAL.EMail", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EmployeeId", "Value");

                    b.ToTable("EMail");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Value = "omar.slik@outlook.com"
                        },
                        new
                        {
                            EmployeeId = 2,
                            Value = "Adham.samauelson@outlook.com"
                        },
                        new
                        {
                            EmployeeId = 3,
                            Value = "Agda.erikson@outlook.com"
                        },
                        new
                        {
                            EmployeeId = 4,
                            Value = "Samauel.Norlund@outlook.com"
                        },
                        new
                        {
                            EmployeeId = 5,
                            Value = "erik.anderson@outlook.com"
                        },
                        new
                        {
                            EmployeeId = 6,
                            Value = "pelle.haglund@outlook.com"
                        },
                        new
                        {
                            EmployeeId = 7,
                            Value = "albin.eklund@outlook.com"
                        },
                        new
                        {
                            EmployeeId = 8,
                            Value = "victoria.Husak@outlook.com"
                        },
                        new
                        {
                            EmployeeId = 8,
                            Value = "victoria.Husak@hotmail.com"
                        },
                        new
                        {
                            EmployeeId = 7,
                            Value = "albin.eklund@gmail.com"
                        },
                        new
                        {
                            EmployeeId = 5,
                            Value = "erik.anderson@hotmail.com"
                        },
                        new
                        {
                            EmployeeId = 1,
                            Value = "omar.slik@hotmail.com"
                        },
                        new
                        {
                            EmployeeId = 1,
                            Value = "omar.slik@gmail.com"
                        },
                        new
                        {
                            EmployeeId = 1,
                            Value = "omar.slik@studerande-skys.com"
                        });
                });

            modelBuilder.Entity("DAL.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Person_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            First_Name = "Omar",
                            Last_Name = "slik",
                            Person_Number = "9004072142"
                        },
                        new
                        {
                            Id = 2,
                            First_Name = "Ulf",
                            Last_Name = "Hedberg",
                            Person_Number = "9407247294"
                        },
                        new
                        {
                            Id = 3,
                            First_Name = "Agda",
                            Last_Name = "Erikson",
                            Person_Number = "9112314292"
                        },
                        new
                        {
                            Id = 4,
                            First_Name = "Samauel",
                            Last_Name = "Norlund",
                            Person_Number = "9506053255"
                        },
                        new
                        {
                            Id = 5,
                            First_Name = "Erik",
                            Last_Name = "Anderson",
                            Person_Number = "8801013287"
                        },
                        new
                        {
                            Id = 6,
                            First_Name = "Pelle",
                            Last_Name = "Haglund",
                            Person_Number = "8909034212"
                        },
                        new
                        {
                            Id = 7,
                            First_Name = "Albin",
                            Last_Name = "Eklund",
                            Person_Number = "9906024632"
                        },
                        new
                        {
                            Id = 8,
                            First_Name = "Victoria",
                            Last_Name = "Husak",
                            Person_Number = "9007068576"
                        });
                });

            modelBuilder.Entity("DAL.PhoneNumber", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EmployeeId", "Value");

                    b.ToTable("PhoneNumber");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Value = "0790763259"
                        },
                        new
                        {
                            EmployeeId = 2,
                            Value = "0753982342"
                        },
                        new
                        {
                            EmployeeId = 3,
                            Value = "0702397109"
                        },
                        new
                        {
                            EmployeeId = 4,
                            Value = "0742315214"
                        },
                        new
                        {
                            EmployeeId = 5,
                            Value = "0709523021"
                        },
                        new
                        {
                            EmployeeId = 6,
                            Value = "0767415941"
                        },
                        new
                        {
                            EmployeeId = 7,
                            Value = "0743268453"
                        },
                        new
                        {
                            EmployeeId = 8,
                            Value = "0790765689"
                        },
                        new
                        {
                            EmployeeId = 7,
                            Value = "0753982342"
                        },
                        new
                        {
                            EmployeeId = 2,
                            Value = "0753161642"
                        },
                        new
                        {
                            EmployeeId = 1,
                            Value = "0753473782"
                        });
                });

            modelBuilder.Entity("DAL.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Bar_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CampainId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date_Of_Last_Check")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Exe_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("List_Of_Ingredients")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number_In_Store")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampainId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bar_Code = "D5905d216",
                            CampainId = 1,
                            Date_Of_Last_Check = new DateTime(2021, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 4,
                            Exe_Date = new DateTime(2021, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Milk",
                            Number_In_Store = 3,
                            Price = 300
                        },
                        new
                        {
                            Id = 2,
                            Bar_Code = "D7502f749",
                            CampainId = 4,
                            Date_Of_Last_Check = new DateTime(2021, 12, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 2,
                            Exe_Date = new DateTime(2021, 8, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cheese",
                            Number_In_Store = 1,
                            Price = 400
                        },
                        new
                        {
                            Id = 3,
                            Bar_Code = "F2480d759",
                            CampainId = 3,
                            Date_Of_Last_Check = new DateTime(2021, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 1,
                            Exe_Date = new DateTime(2021, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Apple",
                            Number_In_Store = 3,
                            Price = 400
                        },
                        new
                        {
                            Id = 4,
                            Bar_Code = "F1309p572",
                            CampainId = 2,
                            Date_Of_Last_Check = new DateTime(2021, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 4,
                            Exe_Date = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Banana",
                            Number_In_Store = 9,
                            Price = 600
                        },
                        new
                        {
                            Id = 5,
                            Bar_Code = "F6592d093",
                            CampainId = 1,
                            Date_Of_Last_Check = new DateTime(2021, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 5,
                            Exe_Date = new DateTime(2021, 11, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Peach",
                            Number_In_Store = 3,
                            Price = 200
                        },
                        new
                        {
                            Id = 6,
                            Bar_Code = "P1379b043",
                            CampainId = 3,
                            Date_Of_Last_Check = new DateTime(2021, 12, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 5,
                            Exe_Date = new DateTime(2021, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Flour",
                            Number_In_Store = 1,
                            Price = 800
                        },
                        new
                        {
                            Id = 7,
                            Bar_Code = "P9845p037",
                            CampainId = 2,
                            Date_Of_Last_Check = new DateTime(2021, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 1,
                            Exe_Date = new DateTime(2021, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sugar",
                            Number_In_Store = 2,
                            Price = 400
                        },
                        new
                        {
                            Id = 8,
                            Bar_Code = "D5754f521",
                            CampainId = 4,
                            Date_Of_Last_Check = new DateTime(2021, 12, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 5,
                            Exe_Date = new DateTime(2021, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Juice",
                            Number_In_Store = 4,
                            Price = 800
                        },
                        new
                        {
                            Id = 9,
                            Bar_Code = "D5467d807",
                            CampainId = 3,
                            Date_Of_Last_Check = new DateTime(2021, 12, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 4,
                            Exe_Date = new DateTime(2021, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tea",
                            Number_In_Store = 8,
                            Price = 600
                        },
                        new
                        {
                            Id = 10,
                            Bar_Code = "B9087m314",
                            CampainId = 3,
                            Date_Of_Last_Check = new DateTime(2021, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 2,
                            Exe_Date = new DateTime(2021, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Toast",
                            Number_In_Store = 6,
                            Price = 200
                        },
                        new
                        {
                            Id = 11,
                            Bar_Code = "B5454p879",
                            Date_Of_Last_Check = new DateTime(2021, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 3,
                            Exe_Date = new DateTime(2021, 4, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Biscut",
                            Number_In_Store = 3,
                            Price = 400
                        },
                        new
                        {
                            Id = 12,
                            Bar_Code = "B6432m665",
                            CampainId = 1,
                            Date_Of_Last_Check = new DateTime(2021, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 1,
                            Exe_Date = new DateTime(2021, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pudding",
                            Number_In_Store = 3,
                            Price = 600
                        },
                        new
                        {
                            Id = 13,
                            Bar_Code = "M6367f485",
                            Date_Of_Last_Check = new DateTime(2021, 12, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 5,
                            Exe_Date = new DateTime(2021, 7, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sausages",
                            Number_In_Store = 2,
                            Price = 400
                        },
                        new
                        {
                            Id = 14,
                            Bar_Code = "M7954d208",
                            CampainId = 2,
                            Date_Of_Last_Check = new DateTime(2021, 12, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 2,
                            Exe_Date = new DateTime(2021, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cruts",
                            Number_In_Store = 4,
                            Price = 300
                        },
                        new
                        {
                            Id = 15,
                            Bar_Code = "M3213p656",
                            Date_Of_Last_Check = new DateTime(2021, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 3,
                            Exe_Date = new DateTime(2021, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Chicken",
                            Number_In_Store = 1,
                            Price = 200
                        },
                        new
                        {
                            Id = 16,
                            Bar_Code = "D1207d865",
                            Date_Of_Last_Check = new DateTime(2021, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 3,
                            Exe_Date = new DateTime(2021, 12, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            List_Of_Ingredients = "Milk,Bacteria",
                            Name = "Yogurt",
                            Number_In_Store = 4,
                            Price = 600
                        },
                        new
                        {
                            Id = 17,
                            Bar_Code = "P3254m697",
                            Date_Of_Last_Check = new DateTime(2021, 12, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 4,
                            Exe_Date = new DateTime(2021, 9, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            List_Of_Ingredients = "Durum,Flour",
                            Name = "Pasta",
                            Number_In_Store = 3,
                            Price = 100
                        },
                        new
                        {
                            Id = 18,
                            Bar_Code = "D3252d375",
                            Date_Of_Last_Check = new DateTime(2021, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 1,
                            Exe_Date = new DateTime(2021, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            List_Of_Ingredients = "Caffeine,Tannin,Oil,Carbohydrates",
                            Name = "Coffee",
                            Number_In_Store = 6,
                            Price = 800
                        },
                        new
                        {
                            Id = 19,
                            Bar_Code = "D3252d624",
                            Date_Of_Last_Check = new DateTime(2021, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 3,
                            Exe_Date = new DateTime(2021, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Butter",
                            Number_In_Store = 3,
                            Price = 150
                        },
                        new
                        {
                            Id = 20,
                            Bar_Code = "D6248d375",
                            Date_Of_Last_Check = new DateTime(2021, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 2,
                            Exe_Date = new DateTime(2021, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bagel",
                            Number_In_Store = 3,
                            Price = 300
                        },
                        new
                        {
                            Id = 21,
                            Bar_Code = "D5257d375",
                            Date_Of_Last_Check = new DateTime(2021, 12, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 1,
                            Exe_Date = new DateTime(2021, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Crossiant",
                            Number_In_Store = 2,
                            Price = 200
                        },
                        new
                        {
                            Id = 22,
                            Bar_Code = "D2135d375",
                            Date_Of_Last_Check = new DateTime(2021, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 2,
                            Exe_Date = new DateTime(2021, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Baguette",
                            Number_In_Store = 12,
                            Price = 100
                        });
                });

            modelBuilder.Entity("DAL.Department", b =>
                {
                    b.HasOne("DAL.Employee", "ResponsibleEmployee")
                        .WithMany("Departments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResponsibleEmployee");
                });

            modelBuilder.Entity("DAL.DepartmentProduct", b =>
                {
                    b.HasOne("DAL.Department", "Department")
                        .WithMany("DepartmentsProducts")
                        .HasForeignKey("DepartmentsId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DAL.Product", "Product")
                        .WithMany("DepartmentsProducts")
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DAL.EMail", b =>
                {
                    b.HasOne("DAL.Employee", "Employee")
                        .WithMany("E_Mail")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DAL.Employee", b =>
                {
                    b.HasOne("DAL.Employee", null)
                        .WithMany("Mentorship")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("DAL.PhoneNumber", b =>
                {
                    b.HasOne("DAL.Employee", "Employee")
                        .WithMany("Phone_Number")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DAL.Product", b =>
                {
                    b.HasOne("DAL.Campain", "Campain")
                        .WithMany()
                        .HasForeignKey("CampainId");

                    b.HasOne("DAL.Employee", "Employee")
                        .WithMany("Products")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campain");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DAL.Department", b =>
                {
                    b.Navigation("DepartmentsProducts");
                });

            modelBuilder.Entity("DAL.Employee", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("E_Mail");

                    b.Navigation("Mentorship");

                    b.Navigation("Phone_Number");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("DAL.Product", b =>
                {
                    b.Navigation("DepartmentsProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
